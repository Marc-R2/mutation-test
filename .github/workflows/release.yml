name: Release

on:
  release:
   types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, windows, macos]

        include:
          - name: linux
            os: ubuntu-latest
            package_arch: linux-x64
          - name: windows
            os: windows-latest
            package_arch: windows-x64
          - name: macos
            os: macos-latest
            package_arch: macos-x64

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - name: Install dependencies
        run: dart pub get
      - name: Compile binary
        run: dart compile exe bin/mutation-test.dart
      - name: Get Tag
        if: ${{ matrix.name != 'windows' }}
        run: echo "RELEASE_VERSION=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Create Package
        if: ${{ matrix.name != 'windows' }}
        run: |
          mkdir -p bundle/bin
          mkdir -p release
          mv bin/mutation-test.exe bundle/bin/mutation-test
          chmod a+x bundle/bin/mutation-test
          cd release
          tar -czvf mutation-test-${{ matrix.package_arch }}-${RELEASE_VERSION}.tar.gz ../bundle/*
      - name: Package windows
        if: ${{ matrix.name == 'windows' }}
        run: |
          mkdir bundle\\bin
          mkdir release
          dir
          dir bin
          powershell Copy-Item "bin/mutation-test.exe" -Destination "bundle/bin"
          cd release
          powershell Compress-Archive ..\\bundle\\* mutation-test-${{ matrix.package_arch }}.zip
      - name: Upload artifacts to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/mutation-test-*
          tag: ${{ github.ref }}
          file_glob: true
          
